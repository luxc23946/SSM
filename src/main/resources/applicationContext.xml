<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<!-- Spring除了不扫描控制器,其他全部扫描 -->
	<context:component-scan base-package="hkd.luxc">
	   <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	   <!--  
	   <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	   -->
	</context:component-scan>
	
	<!-- 加载资源文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	
	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${mysql.user}"/>
		<property name="password" value="${mysql.password}"/>	
		<property name="driverClass" value="${mysql.driver}"/>
		<property name="jdbcUrl" value="${mysql.url}"/>
		<property name="initialPoolSize" value="${mysql.initialPoolSize}"/>
		<property name="maxPoolSize" value="${mysql.maxPoolSize}"/>
	</bean>
	
	<!-- spring事务管理 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 开启基于注解的事务 -->
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
	
	<!-- 
	整合mybatis 
		目的：1、spring管理所有组件。mapper的实现类。
				service==>Dao   @Autowired:自动注入mapper；
			2、spring用来管理事务，spring声明式事务
	-->
	<!--创建出SqlSessionFactory对象  -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- configLocation指定全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!--mapperLocations: 指定mapper文件的位置-->
		<property name="mapperLocations" value="classpath:mappers/*.xml"/>
	</bean>
	
	
	<!--配置一个可以进行批量执行的sqlSession  -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
		<constructor-arg name="executorType" value="BATCH"/>
	</bean>
	
	<!-- 扫描所有的mapper接口的实现，让这些mapper能够自动注入;base-package：指定mapper接口的包名  -->
	<mybatis-spring:scan base-package="hkd.luxc.dao"/>
	<!-- 
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="hkd.luxc.dao" />
	  </bean> 
	-->

</beans>
